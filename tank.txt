import streamlit as st
import pandas as pd

def calculate_mass_balance(dirty_fiber_flow, dirty_fiber_contaminant, washing_liquid_flow, washed_fiber_contaminant_target):
    """繊維の水洗工程の物質収支を計算する関数"""

    # インプット
    mass_in_dirty_fiber = dirty_fiber_flow
    mass_contaminant_in_dirty_fiber = dirty_fiber_flow * dirty_fiber_contaminant / 100
    mass_fiber_in_dirty_fiber = mass_in_dirty_fiber - mass_contaminant_in_dirty_fiber
    mass_in_washing_liquid = washing_liquid_flow
    mass_contaminant_in_washing_liquid = 0  # 通常はゼロと仮定
    mass_water_in_washing_liquid = mass_in_washing_liquid

    # アウトプット (一部仮定)
    # 洗浄後の繊維中の不純物目標値から、不純物の質量を計算
    mass_contaminant_in_washed_fiber = mass_fiber_in_dirty_fiber * washed_fiber_contaminant_target / 100
    mass_out_washed_fiber = mass_fiber_in_dirty_fiber + mass_contaminant_in_washed_fiber

    # 排水中の不純物の質量 (物質収支より)
    mass_contaminant_in_wastewater = mass_contaminant_in_dirty_fiber + mass_contaminant_in_washing_liquid - mass_contaminant_in_washed_fiber

    # 排水の質量 (物質収支より)
    mass_out_wastewater = mass_in_dirty_fiber + mass_in_washing_liquid - mass_out_washed_fiber

    # 排水中の不純物濃度を計算 (ゼロ除算を防ぐ)
    if mass_out_wastewater > 0:
        contaminant_concentration_in_wastewater = (mass_contaminant_in_wastewater / mass_out_wastewater) * 100
    else:
        contaminant_concentration_in_wastewater = 0

    results = {
        "インプット (汚れた繊維)": {
            "流量 [kg/h]": dirty_fiber_flow,
            "不純物濃度 [%]": dirty_fiber_contaminant,
            "不純物量 [kg/h]": mass_contaminant_in_dirty_fiber,
            "繊維量 [kg/h]": mass_fiber_in_dirty_fiber,
        },
        "インプット (洗浄液)": {
            "流量 [kg/h]": washing_liquid_flow,
            "不純物濃度 [%]": 0,
            "不純物量 [kg/h]": 0,
            "水量 [kg/h]": mass_water_in_washing_liquid,
        },
        "アウトプット (洗浄後の繊維)": {
            "流量 [kg/h]": mass_out_washed_fiber,
            "不純物濃度 [%]": washed_fiber_contaminant_target,
            "不純物量 [kg/h]": mass_contaminant_in_washed_fiber,
            "繊維量 [kg/h]": mass_fiber_in_dirty_fiber,
        },
        "アウトプット (排水)": {
            "流量 [kg/h]": mass_out_wastewater,
            "不純物濃度 [%]": contaminant_concentration_in_wastewater,
            "不純物量 [kg/h]": mass_contaminant_in_wastewater,
            "水量 [kg/h]": mass_out_wastewater - mass_contaminant_in_wastewater,
        },
        "物質収支 (全体)": {
            "インプット合計 [kg/h]": dirty_fiber_flow + washing_liquid_flow,
            "アウトプット合計 [kg/h]": mass_out_washed_fiber + mass_out_wastewater,
            "差 [kg/h]": (dirty_fiber_flow + washing_liquid_flow) - (mass_out_washed_fiber + mass_out_wastewater),
        },
        "物質収支 (不純物)": {
            "インプット合計 [kg/h]": mass_contaminant_in_dirty_fiber + mass_contaminant_in_washing_liquid,
            "アウトプット合計 [kg/h]": mass_contaminant_in_washed_fiber + mass_contaminant_in_wastewater,
            "差 [kg/h]": (mass_contaminant_in_dirty_fiber + mass_contaminant_in_washing_liquid) - (mass_contaminant_in_washed_fiber + mass_contaminant_in_wastewater),
        },
    }
    return results

def display_flowchart(results):
    """物質収支の結果をフローチャート風に表示する関数"""
    st.subheader("水洗工程フロー")
    col1, col2, col3 = st.columns([1, 2, 1])

    with col1:
        st.markdown("**インプット**")
        st.markdown("汚れた繊維")
        st.write(f"流量: {results['インプット (汚れた繊維)']['流量 [kg/h]']} kg/h")
        st.write(f"不純物: {results['インプット (汚れた繊維)']['不純物量 [kg/h]']} kg/h ({results['インプット (汚れた繊維)']['不純物濃度 [%]']}%)")
        st.markdown("⬇️")

    with col2:
        st.markdown("**水洗槽**")
        st.markdown("洗浄液")
        st.write(f"流量: {results['インプット (洗浄液)']['流量 [kg/h]']} kg/h")
        st.markdown("⬇️")
        st.markdown("---")
        st.markdown("⬇️")
        st.markdown("**アウトプット**")
        st.markdown("洗浄後の繊維")
        st.write(f"流量: {results['アウトプット (洗浄後の繊維)']['流量 [kg/h]']} kg/h")
        st.write(f"不純物: {results['アウトプット (洗浄後の繊維)']['不純物量 [kg/h]']} kg/h ({results['アウトプット (洗浄後の繊維)']['不純物濃度 [%]']}%)")
        st.markdown("⬇️")
        st.markdown("排水")
        st.write(f"流量: {results['アウトプット (排水)']['流量 [kg/h]']} kg/h")
        st.write(f"不純物: {results['アウトプット (排水)']['不純物量 [kg/h]']} kg/h ({results['アウトプット (排水)']['不純物濃度 [%]']}%)")

    with col3:
        st.empty() # 空の列でレイアウト調整

def display_results_table(results):
    """計算結果をテーブル表示する関数"""
    st.subheader("物質収支計算結果")
    for key, value in results.items():
        st.subheader(key)
        df = pd.DataFrame([value]).T.rename(columns={0: ""})
        st.dataframe(df)

def main():
    st.title("繊維水洗工程 物質収支計算")

    st.sidebar.header("インプット条件")
    dirty_fiber_flow = st.sidebar.number_input("汚れた繊維 流量 [kg/h]", min_value=0.0, value=100.0)
    dirty_fiber_contaminant = st.sidebar.number_input("汚れた繊維 不純物濃度 [%]", min_value=0.0, max_value=100.0, value=10.0)
    washing_liquid_flow = st.sidebar.number_input("洗浄液 流量 [kg/h]", min_value=0.0, value=500.0)
    washed_fiber_contaminant_target = st.sidebar.number_input("洗浄後の繊維 目標不純物濃度 [%]", min_value=0.0, max_value=100.0, value=1.0)

    if st.sidebar.button("計算実行"):
        results = calculate_mass_balance(dirty_fiber_flow, dirty_fiber_contaminant, washing_liquid_flow, washed_fiber_contaminant_target)
        display_flowchart(results)
        display_results_table(results)

if __name__ == "__main__":
    main()